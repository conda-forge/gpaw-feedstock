{% set build = 2 %}
{% set name = "gpaw" %}
{% set version = "25.7.0" %}

{% if mpi != 'nompi' %}
  {% set mpi_prefix = "mpi_" + mpi %}
{% else %}
  {% set mpi_prefix = "nompi" %}
{% endif %}
{% set build_string = "py{}_{}_omp_{}".format(environ.get('CONDA_PY', ''), mpi_prefix, build) %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 93ac829bba36be74eab0d7deef5eb798613c04edbce196837208d206cf39c431
  patches:
    - elpa.patch
    - mpi4py.patch

build:
  number: {{ build }}
  string: {{ build_string }}
  skip: true  # [win]
  track_features:
    - gpaw-has_lower_priority  # [mpi != "openmpi"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
  host:
    - {{ mpi }}  # [mpi != 'nompi']
    - python
    - setuptools
    - elpa * {{ mpi_prefix }}_*
    - libxc >=5.2
    - libblas
    - scalapack  # [mpi != 'nompi']
    - fftw * {{ mpi_prefix }}_*
    - numpy
    - pip
    - ase
    - libvdwxc * {{ mpi_prefix }}_*  # [mpi != 'nompi']
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - scipy
    - ase
    - gpaw-data >=1
    - pyyaml

test:
  requires:
    - pip
  imports:
    - gpaw  # [mpi == 'nompi']
  commands:
    - python -m pip check
    - export OMPI_MCA_plm=isolated                          # [mpi == 'openmpi']
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none  # [mpi == 'openmpi']
    - export OMPI_MCA_rmaps_base_oversubscribe=yes          # [mpi == 'openmpi']
    - python -c "import gpaw"                               # [mpi == 'openmpi']
    - gpaw test

about:
  home: https://wiki.fysik.dtu.dk/gpaw
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: 'GPAW: DFT and beyond within the projector-augmented wave method'
  description: |
    GPAW is a density-functional theory (DFT) Python code based on the
    projector-augmented wave (PAW) method and the atomic simulation environment
    (ASE). It uses plane-waves, atom-centered basis-functions or real-space
    uniform grids combined with multigrid methods.
  doc_url: https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html
  dev_url: https://gitlab.com/gpaw/gpaw

extra:
  recipe-maintainers:
    - jan-janssen
    - gdonval
