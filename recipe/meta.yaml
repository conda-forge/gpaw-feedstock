{% set build = 0 %}
{% set name = "gpaw" %}
{% set version = "22.1.0" %}
{% set build_string = "py{}_{}_{}".format(environ.get('CONDA_PY', ''), mpi, build) %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 2d2509e9e4b23205f5576ddfd1b0e9d9ac8cea1cf80ae1216af29513bd3cc42a

build:
  number: {{ build }}
  string: {{ build_string }}
  skip: true  # [not linux]

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - {{ mpi }}  # [mpi != 'nompi']
    - python
    - pip
    - libxc <5.0
    - libblas
    - scalapack
    - fftw
    - numpy
    - ase
  run:
    - {{ mpi }}  # [mpi != 'nompi']
    - python
    - pip
    - libxc <5.0
    - scalapack
    - fftw
    - {{ pin_compatible('numpy') }}
    - scipy
    - ase
    - gpaw-data

test:
  imports:
    - gpaw  # [mpi == 'nompi']
  commands:
    - python -m pip check
    - export OMPI_MCA_plm=isolated                          # [mpi == 'openmpi']
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none  # [mpi == 'openmpi']
    - export OMPI_MCA_rmaps_base_oversubscribe=yes          # [mpi == 'openmpi']
    - python -c "import gpaw"                               # [mpi == 'openmpi']
    - gpaw test

about:
  home: https://wiki.fysik.dtu.dk/gpaw
  license: GPL-3.0
  license_family: GPL
  license_file: LICENSE
  summary: 'GPAW: DFT and beyond within the projector-augmented wave method'
  description: |
    GPAW is a density-functional theory (DFT) Python code based on the
    projector-augmented wave (PAW) method and the atomic simulation environment
    (ASE). It uses plane-waves, atom-centered basis-functions or real-space
    uniform grids combined with multigrid methods.
  doc_url: https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html
  dev_url: https://gitlab.com/gpaw/gpaw

extra:
  recipe-maintainers:
    - bjodah
    - jan-janssen
